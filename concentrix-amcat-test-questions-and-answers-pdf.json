{
  "data": "ewogICJpZCI6IDU4NTU3MDUsCiAgInRpdGxlIjogIkNvbmNlbnRyaXggQU1DQVQgVGVzdCBRdWVzdGlvbnMgYW5kIEFuc3dlcnMgUERGIOKAkyBNYXN0ZXIgWW91ciBBTUNBVCBQcmVwYXJhdGlvbiIsCiAgImRlc2NyaXB0aW9uIjogIjxwPkdldCB0aGUgQ29uY2VudHJpeCBBTUNBVCB0ZXN0IHF1ZXN0aW9ucyBhbmQgYW5zd2VycyBQREYgdG8gYWNlIHlvdXIgZXhhbS4gQWNjZXNzIGEgd2lkZSB2YXJpZXR5IG9mIHByYWN0aWNlIHF1ZXN0aW9ucyBhbmQgZGV0YWlsZWQgc29sdXRpb25zIHRvIGVuc3VyZSB5b3UncmUgd2VsbC1wcmVwYXJlZCBmb3IgdGhlIENvbmNlbnRyaXggQU1DQVQgYXNzZXNzbWVudDwvcD4iLAogICJ0YWdzIjogWwogICAgIlBsYWNlbWVudCBQYXBlciIsCiAgICAiUXVlc3Rpb24gUGFwZXJzIiwKICAgICJBcHRpdHVkZSBRdWVzdGlvbnMiLAogICAgIkFNQ0FUIgogIF0sCiAgIm92ZXJ2aWV3IjogIkdldCB0aGUgQ29uY2VudHJpeCBBTUNBVCB0ZXN0IHF1ZXN0aW9ucyBhbmQgYW5zd2VycyBQREYgdG8gYWNlIHlvdXIgZXhhbS4gQWNjZXNzIGEgd2lkZSB2YXJpZXR5IG9mIHByYWN0aWNlIHF1ZXN0aW9ucyBhbmQgZGV0YWlsZWQgc29sdXRpb25zIHRvIGVuc3VyZSB5b3UncmUgd2VsbC1wcmVwYXJlZCBmb3IgdGhlIENvbmNlbnRyaXggQU1DQVQgYXNzZXNzbWVudCIsCiAgImRldGFpbHMiOiAiPGgyPjxzdHJvbmc+WW91ciBVbHRpbWF0ZSBHdWlkZSB0byBDb25jZW50cml4IEFNQ0FUIFRlc3QgU3VjY2Vzczwvc3Ryb25nPjwvaDI+PHA+VGhlIENvbmNlbnRyaXggQU1DQVQgdGVzdCBpcyBhIGtleSBhc3Nlc3NtZW50IHVzZWQgYnkgQ29uY2VudHJpeCB0byBldmFsdWF0ZSBjYW5kaWRhdGVzJyBza2lsbHMgaW4gYSB2YXJpZXR5IG9mIGFyZWFzIHN1Y2ggYXMgbG9naWNhbCByZWFzb25pbmcsIHZlcmJhbCBhYmlsaXR5LCBxdWFudGl0YXRpdmUgYXB0aXR1ZGUsIGFuZCB0ZWNobmljYWwga25vd2xlZGdlLiBUbyBleGNlbCBpbiB0aGlzIHRlc3QsIGl04oCZcyBjcnVjaWFsIHRvIHByYWN0aWNlIHdpdGggdGhlIHJpZ2h0IG1hdGVyaWFscy4gT3VyIDxlbT5Db25jZW50cml4IEFNQ0FUIFRlc3QgUXVlc3Rpb25zIGFuZCBBbnN3ZXJzIFBERjwvZW0+IGlzIHNwZWNpYWxseSBkZXNpZ25lZCB0byBoZWxwIHlvdSBjcmFjayB0aGUgdGVzdCB3aXRoIGNvbmZpZGVuY2UuPC9wPjxwPlRoaXMgY29tcHJlaGVuc2l2ZSBQREYgY29udGFpbnMgYSBjb2xsZWN0aW9uIG9mIHJlYWwgQU1DQVQgdGVzdCBxdWVzdGlvbnMsIGZvbGxvd2VkIGJ5IGRldGFpbGVkIHNvbHV0aW9ucyB0aGF0IGV4cGxhaW4gdGhlIHJlYXNvbmluZyBiZWhpbmQgZWFjaCBhbnN3ZXIuIFRoZSBxdWVzdGlvbnMgY292ZXIgYSB3aWRlIHJhbmdlIG9mIHRvcGljcyBpbmNsdWRpbmcgcXVhbnRpdGF0aXZlIGFwdGl0dWRlLCBsb2dpY2FsIHJlYXNvbmluZywgRW5nbGlzaCwgYW5kIHRlY2huaWNhbCBza2lsbHMsIGFsbCByZWxldmFudCB0byBDb25jZW50cml44oCZcyBhc3Nlc3NtZW50LjwvcD48cD5XaXRoIHRoaXMgcmVzb3VyY2UsIHlvdSBjYW4gaW1wcm92ZSB5b3VyIHNwZWVkLCBhY2N1cmFjeSwgYW5kIHByb2JsZW0tc29sdmluZyB0ZWNobmlxdWVzLCBlbnN1cmluZyB5b3UgcGVyZm9ybSB3ZWxsIG9uIHRoZSBkYXkgb2YgdGhlIHRlc3QuIFdoZXRoZXIgeW91J3JlIGEgZnJlc2hlciBvciBhbiBleHBlcmllbmNlZCBjYW5kaWRhdGUsIHRoaXMgUERGIGlzIGEgdmFsdWFibGUgdG9vbCB0byBib29zdCB5b3VyIHByZXBhcmF0aW9uLiBEb27igJl0IGxlYXZlIHlvdXIgc3VjY2VzcyB0byBjaGFuY2XigJRnZXQgeW91ciA8ZW0+Q29uY2VudHJpeCBBTUNBVCB0ZXN0IHF1ZXN0aW9ucyBhbmQgYW5zd2VycyBQREY8L2VtPiBub3cgYW5kIHN0YXJ0IHByZXBhcmluZyBmb3IgeW91ciBmdXR1cmUgdG9kYXkuPC9wPjxoMT48c3Ryb25nPkNvbmNlbnRyaXggQU1DQVQgVGVzdCBRdWVzdGlvbnMgYW5kIEFuc3dlcnMgUERGIOKAkyBZb3VyIEtleSB0byBDcmFja2luZyB0aGUgRXhhbTwvc3Ryb25nPjwvaDE+PHA+VGhlIENvbmNlbnRyaXggQU1DQVQgdGVzdCBpcyB1c2VkIHRvIGFzc2VzcyB2YXJpb3VzIHNraWxscyB0aGF0IGFyZSBpbXBvcnRhbnQgZm9yIGNhbmRpZGF0ZXMgc2Vla2luZyB0byB3b3JrIHdpdGggdGhlIGNvbXBhbnkuIEl0IGluY2x1ZGVzIHNlY3Rpb25zIG9uIGxvZ2ljYWwgcmVhc29uaW5nLCBxdWFudGl0YXRpdmUgYXB0aXR1ZGUsIEVuZ2xpc2ggbGFuZ3VhZ2UgcHJvZmljaWVuY3ksIGFuZCBzb21ldGltZXMgdGVjaG5pY2FsIHNraWxscyBmb3Igc3BlY2lmaWMgcm9sZXMuIFRvIHN1Y2NlZWQgaW4gdGhpcyBjb21wZXRpdGl2ZSBleGFtLCB5b3UgbmVlZCBhIHN0cnVjdHVyZWQgcHJlcGFyYXRpb24gcGxhbiwgYW5kIG91ciA8ZW0+Q29uY2VudHJpeCBBTUNBVCBUZXN0IFF1ZXN0aW9ucyBhbmQgQW5zd2VycyBQREY8L2VtPiBpcyB0aGUgaWRlYWwgcmVzb3VyY2UgdG8gaGVscCB5b3UgcHJlcGFyZSBlZmZlY3RpdmVseS48L3A+PGg0PjxzdHJvbmc+V2hhdOKAmXMgSW5zaWRlIHRoZSBDb25jZW50cml4IEFNQ0FUIFRlc3QgUXVlc3Rpb25zIFBERj88L3N0cm9uZz48L2g0PjxwPjxzdHJvbmc+Q29tcHJlaGVuc2l2ZSBRdWVzdGlvbiBTZXQ6PC9zdHJvbmc+IFRoZSBQREYgY29udGFpbnMgYSByaWNoIGNvbGxlY3Rpb24gb2YgcXVlc3Rpb25zIGJhc2VkIG9uIHRoZSBwYXR0ZXJucyBvZiBwcmV2aW91cyBDb25jZW50cml4IEFNQ0FUIHRlc3RzLiBUaGVzZSBxdWVzdGlvbnMgYXJlIGRpdmlkZWQgaW50byB2YXJpb3VzIGNhdGVnb3JpZXMsIGluY2x1ZGluZzo8L3A+PHVsPjxsaT48c3Ryb25nPlF1YW50aXRhdGl2ZSBBcHRpdHVkZTo8L3N0cm9uZz4gQ292ZXJpbmcgdG9waWNzIGxpa2UgYXJpdGhtZXRpYywgYWxnZWJyYSwgbnVtYmVyIHN5c3RlbXMsIGFuZCBwcm9iYWJpbGl0eS48L2xpPjxsaT48c3Ryb25nPkxvZ2ljYWwgUmVhc29uaW5nOjwvc3Ryb25nPiBJbmNsdWRlcyBwdXp6bGVzLCBibG9vZCByZWxhdGlvbnMsIGNvZGluZy1kZWNvZGluZywgYW5kIGRhdGEgaW50ZXJwcmV0YXRpb24uPC9saT48bGk+PHN0cm9uZz5FbmdsaXNoIExhbmd1YWdlOjwvc3Ryb25nPiBUZXN0cyBvbiBncmFtbWFyLCB2b2NhYnVsYXJ5LCBzZW50ZW5jZSBmb3JtYXRpb24sIGFuZCByZWFkaW5nIGNvbXByZWhlbnNpb24uPC9saT48bGk+PHN0cm9uZz5UZWNobmljYWwgU2tpbGxzIChPcHRpb25hbCk6PC9zdHJvbmc+IFF1ZXN0aW9ucyBiYXNlZCBvbiBwcm9ncmFtbWluZyBhbmQgY29tcHV0ZXIgc2NpZW5jZSBjb25jZXB0cyBmb3IgSVQgcm9sZXMuPC9saT48L3VsPjxwPjxzdHJvbmc+RGV0YWlsZWQgU29sdXRpb25zOjwvc3Ryb25nPiBFYWNoIHF1ZXN0aW9uIGNvbWVzIHdpdGggYSBzdGVwLWJ5LXN0ZXAgc29sdXRpb24sIG1ha2luZyBpdCBlYXNpZXIgdG8gdW5kZXJzdGFuZCB0aGUgbG9naWMgYmVoaW5kIHRoZSBjb3JyZWN0IGFuc3dlci4gVGhlIGV4cGxhbmF0aW9ucyBhcmUgY3JhZnRlZCB0byBoZWxwIHlvdSBncmFzcCBrZXkgY29uY2VwdHMsIGVuYWJsaW5nIHlvdSB0byBhcHBseSB0aGUgc2FtZSBwcm9ibGVtLXNvbHZpbmcgdGVjaG5pcXVlcyB0byBzaW1pbGFyIHF1ZXN0aW9ucy48L3A+PHA+PHN0cm9uZz5Gb2N1cyBvbiBSZWFsIEV4YW0gU2NlbmFyaW9zOjwvc3Ryb25nPiBPdXIgY29sbGVjdGlvbiBvZiBBTUNBVCB0ZXN0IHF1ZXN0aW9ucyBoYXMgYmVlbiBjYXJlZnVsbHkgc2VsZWN0ZWQgdG8gbWF0Y2ggdGhlIHJlYWwgZXhhbeKAmXMgZm9ybWF0IGFuZCBkaWZmaWN1bHR5IGxldmVsLiBUaGlzIGdpdmVzIHlvdSBhIHJlYWxpc3RpYyBwcmFjdGljZSBlbnZpcm9ubWVudCB0aGF0IG1pcnJvcnMgdGhlIENvbmNlbnRyaXggQU1DQVQgdGVzdC4gUHJhY3RpY2luZyB0aGVzZSBxdWVzdGlvbnMgd2lsbCBoZWxwIHlvdSBnYWluIGZhbWlsaWFyaXR5IHdpdGggdGhlIHN0cnVjdHVyZSBhbmQgdGltaW5nIG9mIHRoZSBhY3R1YWwgdGVzdCwgZW5zdXJpbmcgeW91J3JlIHJlYWR5IGZvciBleGFtIGRheS48L3A+PGgyPjxzdHJvbmc+V2h5IFVzZSB0aGUgQ29uY2VudHJpeCBBTUNBVCBUZXN0IFF1ZXN0aW9ucyBQREY/PC9zdHJvbmc+PC9oMj48b2w+PGxpPjxzdHJvbmc+Qm9vc3QgWW91ciBDb25maWRlbmNlOjwvc3Ryb25nPiBUaGUgQ29uY2VudHJpeCBBTUNBVCB0ZXN0IGNhbiBiZSBkYXVudGluZywgZXNwZWNpYWxseSBpZiB5b3UgZG9u4oCZdCBrbm93IHdoYXQgdG8gZXhwZWN0LiBCeSBwcmFjdGljaW5nIHdpdGggcmVhbCwgcHJldmlvdXMgdGVzdCBxdWVzdGlvbnMsIHlvdSBjYW4gcmVkdWNlIHRoZSBhbnhpZXR5IHRoYXQgb2Z0ZW4gY29tZXMgd2l0aCB0YWtpbmcgc3VjaCBhIGNydWNpYWwgZXhhbS4gRmFtaWxpYXJpdHkgd2l0aCB0aGUgcXVlc3Rpb24gdHlwZXMgd2lsbCBoZWxwIHlvdSBhcHByb2FjaCB0aGUgdGVzdCB3aXRoIGdyZWF0ZXIgY29uZmlkZW5jZS48L2xpPjxsaT48c3Ryb25nPkltcHJvdmUgWW91ciBTcGVlZCBhbmQgQWNjdXJhY3k6PC9zdHJvbmc+IFRoZSBBTUNBVCBpcyBhIHRpbWVkIHRlc3QsIHNvIGRldmVsb3Bpbmcgc3BlZWQgYW5kIGFjY3VyYWN5IGlzIGVzc2VudGlhbC4gQnkgc29sdmluZyBhIHZhcmlldHkgb2YgcXVlc3Rpb25zIHVuZGVyIHRpbWVkIGNvbmRpdGlvbnMsIHlvdeKAmWxsIGltcHJvdmUgeW91ciBhYmlsaXR5IHRvIG1hbmFnZSB5b3VyIHRpbWUgZWZmZWN0aXZlbHkgZHVyaW5nIHRoZSB0ZXN0LiBUaGlzIHByYWN0aWNlIHdpbGwgaGVscCB5b3UgYXZvaWQgcnVzaGluZyB0aHJvdWdoIHF1ZXN0aW9ucyBhbmQgbWFraW5nIGNhcmVsZXNzIG1pc3Rha2VzLjwvbGk+PGxpPjxzdHJvbmc+TWFzdGVyIFByb2JsZW0tU29sdmluZyBUZWNobmlxdWVzOjwvc3Ryb25nPiBUaGUgZGV0YWlsZWQgc29sdXRpb25zIHByb3ZpZGVkIGZvciBlYWNoIHF1ZXN0aW9uIHdpbGwgZ3VpZGUgeW91IHRocm91Z2ggdGhlIHN0ZXBzIG9mIHNvbHZpbmcgY29tcGxleCBwcm9ibGVtcy4gVGhlc2Ugc29sdXRpb25zIHdpbGwgaGVscCB5b3UgZGV2ZWxvcCBjcml0aWNhbCBwcm9ibGVtLXNvbHZpbmcgc2tpbGxzIHRoYXQgeW91IGNhbiBhcHBseSBhY3Jvc3MgZGlmZmVyZW50IHNlY3Rpb25zIG9mIHRoZSB0ZXN0LjwvbGk+PGxpPjxzdHJvbmc+VGFpbG9yZWQgdG8gQ29uY2VudHJpeCBIaXJpbmcgQ3JpdGVyaWE6PC9zdHJvbmc+IFRoZSBDb25jZW50cml4IEFNQ0FUIHRlc3QgaXMgZGVzaWduZWQgdG8gZXZhbHVhdGUgY2FuZGlkYXRlcyBmb3Igc3BlY2lmaWMgcm9sZXMgd2l0aGluIHRoZSBjb21wYW55LiBXaGV0aGVyIHlvdeKAmXJlIGFwcGx5aW5nIGZvciBhIHRlY2huaWNhbCBvciBub24tdGVjaG5pY2FsIHBvc2l0aW9uLCBvdXIgPGVtPkNvbmNlbnRyaXggQU1DQVQgVGVzdCBRdWVzdGlvbnMgYW5kIEFuc3dlcnMgUERGPC9lbT4gaGFzIHlvdSBjb3ZlcmVkLiBUaGUgcXVlc3Rpb25zIGFyZSBjdXJhdGVkIHRvIG1hdGNoIENvbmNlbnRyaXgncyB1bmlxdWUgaGlyaW5nIHByb2Nlc3MuPC9saT48bGk+PHN0cm9uZz5UcmFjayBZb3VyIFByb2dyZXNzOjwvc3Ryb25nPiBDb25zaXN0ZW50IHByYWN0aWNlIHdpdGggdGhlIHF1ZXN0aW9ucyBpbiB0aGlzIFBERiB3aWxsIGFsbG93IHlvdSB0byB0cmFjayB5b3VyIHByb2dyZXNzLiBBcyB5b3UgcmV2aXNpdCBxdWVzdGlvbnMgYW5kIGFuYWx5emUgdGhlIHNvbHV0aW9ucywgeW914oCZbGwgaWRlbnRpZnkgYXJlYXMgb2YgaW1wcm92ZW1lbnQgYW5kIGNhbiBmb2N1cyBvbiByZWZpbmluZyB0aG9zZSBza2lsbHMuPC9saT48L29sPjxoMj48c3Ryb25nPkhvdyB0byBVc2UgdGhlIEFNQ0FUIFRlc3QgUXVlc3Rpb25zIEVmZmVjdGl2ZWx5Ojwvc3Ryb25nPjwvaDI+PG9sPjxsaT48c3Ryb25nPlN0YXJ0IGJ5IFJldmlld2luZyB0aGUgUXVlc3Rpb25zOjwvc3Ryb25nPiBEb3dubG9hZCB0aGUgPGVtPkNvbmNlbnRyaXggQU1DQVQgVGVzdCBRdWVzdGlvbnMgUERGPC9lbT4gYW5kIGJlZ2luIGJ5IHJlYWRpbmcgdGhyb3VnaCB0aGUgcXVlc3Rpb25zIHdpdGhvdXQgbG9va2luZyBhdCB0aGUgc29sdXRpb25zLjwvbGk+PGxpPjxzdHJvbmc+U29sdmUgRWFjaCBRdWVzdGlvbjo8L3N0cm9uZz4gQXR0ZW1wdCB0byBzb2x2ZSBhcyBtYW55IHF1ZXN0aW9ucyBhcyB5b3UgY2FuIHdpdGhpbiBhIHNldCB0aW1lZnJhbWUgdG8gc2ltdWxhdGUgYWN0dWFsIGV4YW0gY29uZGl0aW9ucy48L2xpPjxsaT48c3Ryb25nPlJldmlldyBTb2x1dGlvbnM6PC9zdHJvbmc+IEFmdGVyIGNvbXBsZXRpbmcgZWFjaCBzZXQgb2YgcXVlc3Rpb25zLCByZXZpZXcgdGhlIGRldGFpbGVkIHNvbHV0aW9ucyBhbmQgbm90ZSB0aGUgYXJlYXMgd2hlcmUgeW91IG5lZWQgaW1wcm92ZW1lbnQuPC9saT48bGk+PHN0cm9uZz5UYWtlIFRpbWVkIE1vY2sgVGVzdHM6PC9zdHJvbmc+IFVzZSB0aGUgcXVlc3Rpb25zIGluIHRoaXMgUERGIHRvIHRha2UgZnVsbC1sZW5ndGggdGltZWQgbW9jayB0ZXN0cy4gVGhpcyB3aWxsIGhlbHAgeW91IGJlY29tZSBjb21mb3J0YWJsZSB3aXRoIHRoZSBleGFtJ3MgcGFjZSBhbmQgZW5oYW5jZSB5b3VyIGFiaWxpdHkgdG8gYW5zd2VyIHF1ZXN0aW9ucyB1bmRlciBwcmVzc3VyZS48L2xpPjwvb2w+PGg0PjxzdHJvbmc+TW90aXZhdGlvbmFsIFF1b3RlIGZvciBTdHVkeWluZzo8L3N0cm9uZz48L2g0PjxwPjxlbT5cIjwvZW0+PHN0cm9uZz48ZW0+VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRob3NlIHdobyBiZWxpZXZlIGluIHRoZSBiZWF1dHkgb2YgdGhlaXIgZHJlYW1zPC9lbT48L3N0cm9uZz48ZW0+LlwiPC9lbT4g4oCTIEVsZWFub3IgUm9vc2V2ZWx0PC9wPjxwPlRoaXMgcXVvdGUgZW5jb3VyYWdlcyB5b3UgdG8gc3RheSBmb2N1c2VkIG9uIHlvdXIgZ29hbHMgYW5kIGJlbGlldmUgaW4geW91ciBwb3RlbnRpYWwuIFRoZSBlZmZvcnQgeW91IHB1dCBpbnRvIHN0dWR5aW5nIG5vdyB3aWxsIHNoYXBlIHlvdXIgZnV0dXJlIHN1Y2Nlc3MuPC9wPjxoMz48c3Ryb25nPlRhZ3M8L3N0cm9uZz48L2gzPjxwPjxzdHJvbmc+Q29uY2VudHJpeCBBTUNBVCBUZXN0IFF1ZXN0aW9ucywgQU1DQVQgUXVlc3Rpb25zIGFuZCBBbnN3ZXJzLCBBTUNBVCBUZXN0IFBERiwgQU1DQVQgTG9naWNhbCBSZWFzb25pbmcgUXVlc3Rpb25zLCBDb25jZW50cml4IFBsYWNlbWVudCBUZXN0LCBDb25jZW50cml4IEFNQ0FUIFByYWN0aWNlLCBDb25jZW50cml4IEFNQ0FUIFBERiwgQU1DQVQgUXVhbnRpdGF0aXZlIEFwdGl0dWRlLCBBTUNBVCBFbmdsaXNoIFF1ZXN0aW9ucywgQU1DQVQgTW9jayBUZXN0cywgQ29uY2VudHJpeCBQcmVwYXJhdGlvbiwgQ29uY2VudHJpeCBIaXJpbmcgVGVzdCwgQU1DQVQgUHJldmlvdXMgUGFwZXJzLCBBY2NlbnR1cmUgQXB0aXR1ZGUgUXVlc3Rpb25zLjwvc3Ryb25nPjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly9zaG9wLnBsYWNlbWVudG1hc3Rlci5pbi9xdWVzdGlvbi1wYXBlci9hbWNhdC1wcmV2aW91cy1wYXBlcnMtcGRmXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiIHRhcmdldD1cIl9ibGFua1wiPkFNQ0FUIFByZXZpb3VzIFBhcGVyczwvYT48L3A+PHA+PGEgaHJlZj1cImh0dHBzOi8vc2hvcC5wbGFjZW1lbnRtYXN0ZXIuaW4vcXVlc3Rpb24tcGFwZXIvYW1jYXQtc2FtcGxlLXBhcGVyc1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5BTUNBVCBTYW1wbGUgUGFwZXJzPC9hPjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly9zaG9wLnBsYWNlbWVudG1hc3Rlci5pbi9xdWVzdGlvbi1wYXBlci9hY2NlbnR1cmUtcGxhY2VtZW50LXBhcGVyc1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5BY2NlbnR1cmUgUGxhY2VtZW50IFBhcGVyczwvYT48L3A+PHA+PGEgaHJlZj1cImh0dHBzOi8vc2hvcC5wbGFjZW1lbnRtYXN0ZXIuaW4vcXVlc3Rpb24tcGFwZXIvYWNjZW50dXJlLWFwdGl0dWRlLXF1ZXN0aW9uc1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5BY2NlbnR1cmUgQXB0aXR1ZGUgUXVlc3Rpb25zPC9hPjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly9zaG9wLnBsYWNlbWVudG1hc3Rlci5pbi9xdWVzdGlvbi1wYXBlci9hY2NlbnR1cmUtYXB0aXR1ZGUtcXVlc3Rpb25zLWFuc3dlcnMtcGRmXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiIHRhcmdldD1cIl9ibGFua1wiPkFjY2VudHVyZSBBcHRpdHVkZSBRdWVzdGlvbnMgQW5kIEFuc3dlcnMgUERGPC9hPjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly9zaG9wLnBsYWNlbWVudG1hc3Rlci5pbi9xdWVzdGlvbi1wYXBlci9pbmZvc3lzLXBsYWNlbWVudC1wYXBlcnNcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+SW5mb3N5cyBQbGFjZW1lbnQgUGFwZXJzPC9hPjwvcD48cD48YSBocmVmPVwiaHR0cHM6Ly9zaG9wLnBsYWNlbWVudG1hc3Rlci5pbi9xdWVzdGlvbi1wYXBlci9pbmZvc3lzLWFwdGl0dWRlLXF1ZXN0aW9uc1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5JbmZvc3lzIEFwdGl0dWRlIFF1ZXN0aW9uczwvYT48L3A+IiwKICAiZGlzY291bnRQcmljZSI6ICIxOTkiLAogICJwcmljZSI6ICI0OTkiLAogICJpbWFnZXMiOiBbCiAgICAiaHR0cHM6Ly9zdG9yZWFzc2V0cy5pbS1jZG4uY29tL21lZGlhLW1hbmFnZXIvcGxhY2VtZW50bWVudG9yLzhISndlNlBScjJBVzd5amxSQkgwXzdqV1l1dWxGUXFXN05ZbjVIWDFJXzM3NjEyOTYxYzBhMTRmNjJiMTdlYmMxNmM3MTI1Y2Q3XzB4MF93ZWJwLndlYnAiCiAgXSwKICAidXJsIjogImh0dHBzOi8vc2hvcC5wbGFjZW1lbnRtYXN0ZXIuaW4vcXVlc3Rpb25zLXBhcGVyL2NvbmNlbnRyaXgtYW1jYXQtdGVzdC1xdWVzdGlvbnMtYW5kLWFuc3dlcnMtcGRmIgp9"
}